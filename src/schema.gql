# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  name: String!
  status: String!
  image_url: String!
  programs: [Program!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Tag {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  name: String!
  resources: [Resource!]!
}

type Equpment {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  title: String!
  icon: String!
  resource: [Resource!]!
}

type Resource {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  title: String!
  url: String!
  description: String!
  status: String!
  provider: String!
  duration_in_sec: Float!
  thumb_url: String!
  type: String!
  additional_info: JSONObject!
  intensity_level: Float!
  met: Float!
  reps: Float!
  video_type: String!
  exercise_type: String!
  rpe: Int
  equipments: [Equpment!]!
  tags: [Tag!]!
  training_days_resources: [TrainingDayResources!]!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type TrainingDayResources {
  training_day_id: String!
  resource_id: String!
  resource_order: String!
  pause: String!
  training_day: TrainingDay!
  resource: Resource!
}

type TrainingDay {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  title: String!
  intensity_level: Float!
  video_type: String!
  excercise_type: String!
  training_days_resources: [TrainingDayResources!]!
  program_training_day: [ProgramTrainingDay!]!
}

type ProgramTrainingDay {
  program_id: String!
  training_day_id: String!
  training_day_order: String!
  created_at: DateTime
  updated_at: DateTime
  program: Program!
  training_day: TrainingDay!
}

type Program {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  name: String!
  desc: String!
  status: String!
  image_url: String!
  level: String!
  duration: String!
  duration_unit: Float!
  section: String!
  intensity_level: Float!
  total_met: Float!
  excercise_type: Float!
  gender: String!
  purpose: String!
  category: Category!
  program_training_days: [ProgramTrainingDay!]!
  program_attempts: [ProgramAttempt!]!
}

type ProgramAttempt {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  status: String!
  start_date: DateTime!
  account_id: User!
  program: Program!
  tranings: [Training!]!
}

type Training {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  status: String!
  start_date: DateTime!
  program_attempt: ProgramAttempt!
  ephemeral_program_attempts: [EphemeralProgramAttempt!]!
}

type EphemeralProgramAttempt {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  status: String!
  start_date: DateTime!
  account_id: User!
  traning: Training!
}

type User {
  id: String!
  created_at: DateTime
  updated_at: DateTime
  email: String!
  firebase_id: String!
  first_name: String
  last_name: String
  phone_number: String
  status: String
  role: String!
  avatar_url: String
  age: Int
  height: Float
  weight: Float
  gender: String
  goal_weight: Float
  has_rated_app: Boolean
  date_of_birth: DateTime
  program_attempts: [ProgramAttempt!]!
  ephemeral_program_attempts: [EphemeralProgramAttempt!]!
}

type UserInfo {
  uid: String!
  displayName: String!
  email: String!
  photoURL: String!
  providerId: String!
  phoneNumber: String!
}

type UserMetadata {
  creationTime: String!
  lastSignInTime: String!
  lastRefreshTime: String
}

type UserRecord {
  uid: String!
  email: String
  emailVerified: Boolean!
  displayName: String
  photoURL: String
  phoneNumber: String
  disabled: Boolean!
  metadata: UserMetadata!
  providerData: [UserInfo!]!
}

type UsersFindAndCount {
  results: [User!]
  count: Int
}

type Query {
  getHello: String!
  me: User!
  getUsers(page: Float!, limit: Float!): UsersFindAndCount!
  supportTicket(userEmail: String!, message: String!, issue: String!): Boolean!
  categories: [Category!]!
  category(id: String!): Category!
  programs: [Program!]!
  program(id: String!): Program!
  resource(id: Int!): Resource!
  equpment(id: Int!): Equpment!
}

type Mutation {
  createFirebaseUser(email: String!, password: String!): UserRecord!
  setRole(id: String!, role: String!): User!
  createUserByAdmin(email: String!, role: String!): User!
  createUser: User!
  removeUser(id: String!): Boolean!
  updateUserByUser(id: String!, updateUserByUserInput: UpdateUserByUserInput!): User!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: String!): Category!
  createProgram(createProgramInput: CreateProgramInput!): Program!
  updateProgram(updateProgramInput: UpdateProgramInput!): Program!
  removeProgram(id: String!): Program!
  createResource(createResourceInput: CreateResourceInput!): Resource!
  updateResource(updateResourceInput: UpdateResourceInput!): Resource!
  removeResource(id: Int!): Resource!
  createEqupment(createEqupmentInput: CreateEqupmentInput!): Equpment!
  updateEqupment(updateEqupmentInput: UpdateEqupmentInput!): Equpment!
  removeEqupment(id: Int!): Equpment!
}

input UpdateUserByUserInput {
  height: Float!
  weight: Float!
  gender: String!
  date_of_birth: String!
}

input CreateCategoryInput {
  name: String!
  status: String!
  image_url: String!
}

input UpdateCategoryInput {
  name: String
  status: String
  image_url: String
  id: String!
}

input CreateProgramInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateProgramInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: String!
}

input CreateResourceInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateResourceInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateEqupmentInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateEqupmentInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}